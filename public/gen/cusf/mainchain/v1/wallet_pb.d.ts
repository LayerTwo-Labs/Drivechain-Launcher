// CUSF mainchain wallet service 

// @generated by protoc-gen-es v2.2.5 with parameter "js_import_style=legacy_commonjs"
// @generated from file cusf/mainchain/v1/wallet.proto (package cusf.mainchain.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { ConsensusHex, Hex, ReverseHex } from "../../common/v1/common_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import type { OutPoint, SidechainDeclaration } from "./common_pb";

/**
 * Describes the file cusf/mainchain/v1/wallet.proto.
 */
export declare const file_cusf_mainchain_v1_wallet: GenFile;

/**
 * @generated from message cusf.mainchain.v1.WalletTransaction
 */
export declare type WalletTransaction = Message<"cusf.mainchain.v1.WalletTransaction"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex txid = 1;
   */
  txid?: ReverseHex;

  /**
   * @generated from field: uint64 fee_sats = 2;
   */
  feeSats: bigint;

  /**
   * @generated from field: uint64 received_sats = 3;
   */
  receivedSats: bigint;

  /**
   * @generated from field: uint64 sent_sats = 4;
   */
  sentSats: bigint;

  /**
   * @generated from field: cusf.mainchain.v1.WalletTransaction.Confirmation confirmation_info = 5;
   */
  confirmationInfo?: WalletTransaction_Confirmation;
};

/**
 * Describes the message cusf.mainchain.v1.WalletTransaction.
 * Use `create(WalletTransactionSchema)` to create a new message.
 */
export declare const WalletTransactionSchema: GenMessage<WalletTransaction>;

/**
 * @generated from message cusf.mainchain.v1.WalletTransaction.Confirmation
 */
export declare type WalletTransaction_Confirmation = Message<"cusf.mainchain.v1.WalletTransaction.Confirmation"> & {
  /**
   * @generated from field: uint32 height = 1;
   */
  height: number;

  /**
   * @generated from field: cusf.common.v1.ReverseHex block_hash = 2;
   */
  blockHash?: ReverseHex;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;
};

/**
 * Describes the message cusf.mainchain.v1.WalletTransaction.Confirmation.
 * Use `create(WalletTransaction_ConfirmationSchema)` to create a new message.
 */
export declare const WalletTransaction_ConfirmationSchema: GenMessage<WalletTransaction_Confirmation>;

/**
 * @generated from message cusf.mainchain.v1.BroadcastWithdrawalBundleRequest
 */
export declare type BroadcastWithdrawalBundleRequest = Message<"cusf.mainchain.v1.BroadcastWithdrawalBundleRequest"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_id = 1;
   */
  sidechainId?: number;

  /**
   * @generated from field: google.protobuf.BytesValue transaction = 2;
   */
  transaction?: Uint8Array;
};

/**
 * Describes the message cusf.mainchain.v1.BroadcastWithdrawalBundleRequest.
 * Use `create(BroadcastWithdrawalBundleRequestSchema)` to create a new message.
 */
export declare const BroadcastWithdrawalBundleRequestSchema: GenMessage<BroadcastWithdrawalBundleRequest>;

/**
 * @generated from message cusf.mainchain.v1.BroadcastWithdrawalBundleResponse
 */
export declare type BroadcastWithdrawalBundleResponse = Message<"cusf.mainchain.v1.BroadcastWithdrawalBundleResponse"> & {
};

/**
 * Describes the message cusf.mainchain.v1.BroadcastWithdrawalBundleResponse.
 * Use `create(BroadcastWithdrawalBundleResponseSchema)` to create a new message.
 */
export declare const BroadcastWithdrawalBundleResponseSchema: GenMessage<BroadcastWithdrawalBundleResponse>;

/**
 * @generated from message cusf.mainchain.v1.CreateBmmCriticalDataTransactionRequest
 */
export declare type CreateBmmCriticalDataTransactionRequest = Message<"cusf.mainchain.v1.CreateBmmCriticalDataTransactionRequest"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_id = 1;
   */
  sidechainId?: number;

  /**
   * @generated from field: google.protobuf.UInt64Value value_sats = 2;
   */
  valueSats?: bigint;

  /**
   * @generated from field: google.protobuf.UInt32Value height = 3;
   */
  height?: number;

  /**
   * @generated from field: cusf.common.v1.ConsensusHex critical_hash = 4;
   */
  criticalHash?: ConsensusHex;

  /**
   * @generated from field: cusf.common.v1.ReverseHex prev_bytes = 5;
   */
  prevBytes?: ReverseHex;
};

/**
 * Describes the message cusf.mainchain.v1.CreateBmmCriticalDataTransactionRequest.
 * Use `create(CreateBmmCriticalDataTransactionRequestSchema)` to create a new message.
 */
export declare const CreateBmmCriticalDataTransactionRequestSchema: GenMessage<CreateBmmCriticalDataTransactionRequest>;

/**
 * @generated from message cusf.mainchain.v1.CreateBmmCriticalDataTransactionResponse
 */
export declare type CreateBmmCriticalDataTransactionResponse = Message<"cusf.mainchain.v1.CreateBmmCriticalDataTransactionResponse"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex txid = 1;
   */
  txid?: ReverseHex;
};

/**
 * Describes the message cusf.mainchain.v1.CreateBmmCriticalDataTransactionResponse.
 * Use `create(CreateBmmCriticalDataTransactionResponseSchema)` to create a new message.
 */
export declare const CreateBmmCriticalDataTransactionResponseSchema: GenMessage<CreateBmmCriticalDataTransactionResponse>;

/**
 * @generated from message cusf.mainchain.v1.CreateDepositTransactionRequest
 */
export declare type CreateDepositTransactionRequest = Message<"cusf.mainchain.v1.CreateDepositTransactionRequest"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_id = 1;
   */
  sidechainId?: number;

  /**
   * Addresses are encoded in UTF8.
   * *Sidechain deposit addresses* (not sidechain addresses) are typically
   * formatted as `s<SLOT_NUMBER>_<ADDRESS>_<CHECKSUM>`,
   * where `CHECKSUM` is a hex encoding of the first 6 bytes of the SHA256
   * hash of `s<SLOT_NUMBER>_<ADDRESS>`.
   * protolint:disable:next MAX_LINE_LENGTH
   * https://github.com/LayerTwo-Labs/testchain-deprecated/blob/4b7bae3e1218e058f59a43caf6ccac2a4e9a91f6/src/sidechain.cpp#L219
   * The address used here is a sidechain address, the middle component of a
   * sidechain deposit address.
   *
   * @generated from field: google.protobuf.StringValue address = 2;
   */
  address?: string;

  /**
   * @generated from field: google.protobuf.UInt64Value value_sats = 3;
   */
  valueSats?: bigint;

  /**
   * @generated from field: google.protobuf.UInt64Value fee_sats = 4;
   */
  feeSats?: bigint;
};

/**
 * Describes the message cusf.mainchain.v1.CreateDepositTransactionRequest.
 * Use `create(CreateDepositTransactionRequestSchema)` to create a new message.
 */
export declare const CreateDepositTransactionRequestSchema: GenMessage<CreateDepositTransactionRequest>;

/**
 * @generated from message cusf.mainchain.v1.CreateDepositTransactionResponse
 */
export declare type CreateDepositTransactionResponse = Message<"cusf.mainchain.v1.CreateDepositTransactionResponse"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex txid = 1;
   */
  txid?: ReverseHex;
};

/**
 * Describes the message cusf.mainchain.v1.CreateDepositTransactionResponse.
 * Use `create(CreateDepositTransactionResponseSchema)` to create a new message.
 */
export declare const CreateDepositTransactionResponseSchema: GenMessage<CreateDepositTransactionResponse>;

/**
 * @generated from message cusf.mainchain.v1.CreateNewAddressRequest
 */
export declare type CreateNewAddressRequest = Message<"cusf.mainchain.v1.CreateNewAddressRequest"> & {
};

/**
 * Describes the message cusf.mainchain.v1.CreateNewAddressRequest.
 * Use `create(CreateNewAddressRequestSchema)` to create a new message.
 */
export declare const CreateNewAddressRequestSchema: GenMessage<CreateNewAddressRequest>;

/**
 * @generated from message cusf.mainchain.v1.CreateNewAddressResponse
 */
export declare type CreateNewAddressResponse = Message<"cusf.mainchain.v1.CreateNewAddressResponse"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;
};

/**
 * Describes the message cusf.mainchain.v1.CreateNewAddressResponse.
 * Use `create(CreateNewAddressResponseSchema)` to create a new message.
 */
export declare const CreateNewAddressResponseSchema: GenMessage<CreateNewAddressResponse>;

/**
 * @generated from message cusf.mainchain.v1.CreateSidechainProposalRequest
 */
export declare type CreateSidechainProposalRequest = Message<"cusf.mainchain.v1.CreateSidechainProposalRequest"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_id = 1;
   */
  sidechainId?: number;

  /**
   * @generated from field: cusf.mainchain.v1.SidechainDeclaration declaration = 2;
   */
  declaration?: SidechainDeclaration;
};

/**
 * Describes the message cusf.mainchain.v1.CreateSidechainProposalRequest.
 * Use `create(CreateSidechainProposalRequestSchema)` to create a new message.
 */
export declare const CreateSidechainProposalRequestSchema: GenMessage<CreateSidechainProposalRequest>;

/**
 * @generated from message cusf.mainchain.v1.CreateSidechainProposalResponse
 */
export declare type CreateSidechainProposalResponse = Message<"cusf.mainchain.v1.CreateSidechainProposalResponse"> & {
  /**
   * @generated from oneof cusf.mainchain.v1.CreateSidechainProposalResponse.event
   */
  event: {
    /**
     * @generated from field: cusf.mainchain.v1.CreateSidechainProposalResponse.Confirmed confirmed = 1;
     */
    value: CreateSidechainProposalResponse_Confirmed;
    case: "confirmed";
  } | {
    /**
     * @generated from field: cusf.mainchain.v1.CreateSidechainProposalResponse.NotConfirmed not_confirmed = 2;
     */
    value: CreateSidechainProposalResponse_NotConfirmed;
    case: "notConfirmed";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message cusf.mainchain.v1.CreateSidechainProposalResponse.
 * Use `create(CreateSidechainProposalResponseSchema)` to create a new message.
 */
export declare const CreateSidechainProposalResponseSchema: GenMessage<CreateSidechainProposalResponse>;

/**
 * @generated from message cusf.mainchain.v1.CreateSidechainProposalResponse.Confirmed
 */
export declare type CreateSidechainProposalResponse_Confirmed = Message<"cusf.mainchain.v1.CreateSidechainProposalResponse.Confirmed"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex block_hash = 1;
   */
  blockHash?: ReverseHex;

  /**
   * @generated from field: google.protobuf.UInt32Value confirmations = 2;
   */
  confirmations?: number;

  /**
   * @generated from field: google.protobuf.UInt32Value height = 3;
   */
  height?: number;

  /**
   * @generated from field: cusf.mainchain.v1.OutPoint outpoint = 4;
   */
  outpoint?: OutPoint;

  /**
   * @generated from field: cusf.common.v1.ReverseHex prev_block_hash = 5;
   */
  prevBlockHash?: ReverseHex;
};

/**
 * Describes the message cusf.mainchain.v1.CreateSidechainProposalResponse.Confirmed.
 * Use `create(CreateSidechainProposalResponse_ConfirmedSchema)` to create a new message.
 */
export declare const CreateSidechainProposalResponse_ConfirmedSchema: GenMessage<CreateSidechainProposalResponse_Confirmed>;

/**
 * @generated from message cusf.mainchain.v1.CreateSidechainProposalResponse.NotConfirmed
 */
export declare type CreateSidechainProposalResponse_NotConfirmed = Message<"cusf.mainchain.v1.CreateSidechainProposalResponse.NotConfirmed"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex block_hash = 1;
   */
  blockHash?: ReverseHex;

  /**
   * @generated from field: google.protobuf.UInt32Value height = 2;
   */
  height?: number;

  /**
   * @generated from field: cusf.common.v1.ReverseHex prev_block_hash = 3;
   */
  prevBlockHash?: ReverseHex;
};

/**
 * Describes the message cusf.mainchain.v1.CreateSidechainProposalResponse.NotConfirmed.
 * Use `create(CreateSidechainProposalResponse_NotConfirmedSchema)` to create a new message.
 */
export declare const CreateSidechainProposalResponse_NotConfirmedSchema: GenMessage<CreateSidechainProposalResponse_NotConfirmed>;

/**
 * @generated from message cusf.mainchain.v1.CreateWalletRequest
 */
export declare type CreateWalletRequest = Message<"cusf.mainchain.v1.CreateWalletRequest"> & {
  /**
   * BIP39 mnemonic. 12 or 24 words.
   *
   * @generated from field: repeated string mnemonic_words = 1;
   */
  mnemonicWords: string[];

  /**
   * Path to a file containing the mnemonic. 
   *
   * @generated from field: string mnemonic_path = 2;
   */
  mnemonicPath: string;

  /**
   * Password for the wallet. Used to encrypt the mnemonic in storage.
   * NOT a BIP39 passphrase.
   *
   * @generated from field: string password = 3;
   */
  password: string;
};

/**
 * Describes the message cusf.mainchain.v1.CreateWalletRequest.
 * Use `create(CreateWalletRequestSchema)` to create a new message.
 */
export declare const CreateWalletRequestSchema: GenMessage<CreateWalletRequest>;

/**
 * @generated from message cusf.mainchain.v1.CreateWalletResponse
 */
export declare type CreateWalletResponse = Message<"cusf.mainchain.v1.CreateWalletResponse"> & {
};

/**
 * Describes the message cusf.mainchain.v1.CreateWalletResponse.
 * Use `create(CreateWalletResponseSchema)` to create a new message.
 */
export declare const CreateWalletResponseSchema: GenMessage<CreateWalletResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetBalanceRequest
 */
export declare type GetBalanceRequest = Message<"cusf.mainchain.v1.GetBalanceRequest"> & {
};

/**
 * Describes the message cusf.mainchain.v1.GetBalanceRequest.
 * Use `create(GetBalanceRequestSchema)` to create a new message.
 */
export declare const GetBalanceRequestSchema: GenMessage<GetBalanceRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetBalanceResponse
 */
export declare type GetBalanceResponse = Message<"cusf.mainchain.v1.GetBalanceResponse"> & {
  /**
   * @generated from field: uint64 confirmed_sats = 1;
   */
  confirmedSats: bigint;

  /**
   * @generated from field: uint64 pending_sats = 2;
   */
  pendingSats: bigint;
};

/**
 * Describes the message cusf.mainchain.v1.GetBalanceResponse.
 * Use `create(GetBalanceResponseSchema)` to create a new message.
 */
export declare const GetBalanceResponseSchema: GenMessage<GetBalanceResponse>;

/**
 * @generated from message cusf.mainchain.v1.ListSidechainDepositTransactionsRequest
 */
export declare type ListSidechainDepositTransactionsRequest = Message<"cusf.mainchain.v1.ListSidechainDepositTransactionsRequest"> & {
};

/**
 * Describes the message cusf.mainchain.v1.ListSidechainDepositTransactionsRequest.
 * Use `create(ListSidechainDepositTransactionsRequestSchema)` to create a new message.
 */
export declare const ListSidechainDepositTransactionsRequestSchema: GenMessage<ListSidechainDepositTransactionsRequest>;

/**
 * @generated from message cusf.mainchain.v1.ListSidechainDepositTransactionsResponse
 */
export declare type ListSidechainDepositTransactionsResponse = Message<"cusf.mainchain.v1.ListSidechainDepositTransactionsResponse"> & {
  /**
   * @generated from field: repeated cusf.mainchain.v1.ListSidechainDepositTransactionsResponse.SidechainDepositTransaction transactions = 1;
   */
  transactions: ListSidechainDepositTransactionsResponse_SidechainDepositTransaction[];
};

/**
 * Describes the message cusf.mainchain.v1.ListSidechainDepositTransactionsResponse.
 * Use `create(ListSidechainDepositTransactionsResponseSchema)` to create a new message.
 */
export declare const ListSidechainDepositTransactionsResponseSchema: GenMessage<ListSidechainDepositTransactionsResponse>;

/**
 * @generated from message cusf.mainchain.v1.ListSidechainDepositTransactionsResponse.SidechainDepositTransaction
 */
export declare type ListSidechainDepositTransactionsResponse_SidechainDepositTransaction = Message<"cusf.mainchain.v1.ListSidechainDepositTransactionsResponse.SidechainDepositTransaction"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_number = 1;
   */
  sidechainNumber?: number;

  /**
   * @generated from field: cusf.mainchain.v1.WalletTransaction tx = 2;
   */
  tx?: WalletTransaction;
};

/**
 * Describes the message cusf.mainchain.v1.ListSidechainDepositTransactionsResponse.SidechainDepositTransaction.
 * Use `create(ListSidechainDepositTransactionsResponse_SidechainDepositTransactionSchema)` to create a new message.
 */
export declare const ListSidechainDepositTransactionsResponse_SidechainDepositTransactionSchema: GenMessage<ListSidechainDepositTransactionsResponse_SidechainDepositTransaction>;

/**
 * @generated from message cusf.mainchain.v1.ListTransactionsRequest
 */
export declare type ListTransactionsRequest = Message<"cusf.mainchain.v1.ListTransactionsRequest"> & {
};

/**
 * Describes the message cusf.mainchain.v1.ListTransactionsRequest.
 * Use `create(ListTransactionsRequestSchema)` to create a new message.
 */
export declare const ListTransactionsRequestSchema: GenMessage<ListTransactionsRequest>;

/**
 * @generated from message cusf.mainchain.v1.ListTransactionsResponse
 */
export declare type ListTransactionsResponse = Message<"cusf.mainchain.v1.ListTransactionsResponse"> & {
  /**
   * @generated from field: repeated cusf.mainchain.v1.WalletTransaction transactions = 1;
   */
  transactions: WalletTransaction[];
};

/**
 * Describes the message cusf.mainchain.v1.ListTransactionsResponse.
 * Use `create(ListTransactionsResponseSchema)` to create a new message.
 */
export declare const ListTransactionsResponseSchema: GenMessage<ListTransactionsResponse>;

/**
 * @generated from message cusf.mainchain.v1.SendTransactionRequest
 */
export declare type SendTransactionRequest = Message<"cusf.mainchain.v1.SendTransactionRequest"> & {
  /**
   * Address -> satoshi amount
   *
   * @generated from field: map<string, uint64> destinations = 1;
   */
  destinations: { [key: string]: bigint };

  /**
   * If not set, a reasonable rate is used by asking Core for an estimate.
   *
   * @generated from field: optional cusf.mainchain.v1.SendTransactionRequest.FeeRate fee_rate = 2;
   */
  feeRate?: SendTransactionRequest_FeeRate;

  /**
   * if set, the transaction will add a separate OP_RETURN output with this
   * message.
   *
   * @generated from field: optional cusf.common.v1.Hex op_return_message = 3;
   */
  opReturnMessage?: Hex;

  /**
   * UTXOs that must be included in the transaction. Incompatible with
   * specifying a draining address.
   *
   * @generated from field: repeated cusf.mainchain.v1.SendTransactionRequest.RequiredUtxo required_utxos = 4;
   */
  requiredUtxos: SendTransactionRequest_RequiredUtxo[];

  /**
   * If set, the transaction will send all UTXOs in the wallet to this address.
   * Incompatible with specifying required UTXOs.
   *
   * @generated from field: optional string drain_wallet_to = 5;
   */
  drainWalletTo?: string;
};

/**
 * Describes the message cusf.mainchain.v1.SendTransactionRequest.
 * Use `create(SendTransactionRequestSchema)` to create a new message.
 */
export declare const SendTransactionRequestSchema: GenMessage<SendTransactionRequest>;

/**
 * @generated from message cusf.mainchain.v1.SendTransactionRequest.FeeRate
 */
export declare type SendTransactionRequest_FeeRate = Message<"cusf.mainchain.v1.SendTransactionRequest.FeeRate"> & {
  /**
   * @generated from oneof cusf.mainchain.v1.SendTransactionRequest.FeeRate.fee
   */
  fee: {
    /**
     * Fee rate, measured in sat/vbyte.
     *
     * @generated from field: uint64 sat_per_vbyte = 1;
     */
    value: bigint;
    case: "satPerVbyte";
  } | {
    /**
     * Fee amount, measured in sats.
     *
     * @generated from field: uint64 sats = 2;
     */
    value: bigint;
    case: "sats";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message cusf.mainchain.v1.SendTransactionRequest.FeeRate.
 * Use `create(SendTransactionRequest_FeeRateSchema)` to create a new message.
 */
export declare const SendTransactionRequest_FeeRateSchema: GenMessage<SendTransactionRequest_FeeRate>;

/**
 * A previous unspent transaction output that must be included in the
 * transaction.
 *
 * @generated from message cusf.mainchain.v1.SendTransactionRequest.RequiredUtxo
 */
export declare type SendTransactionRequest_RequiredUtxo = Message<"cusf.mainchain.v1.SendTransactionRequest.RequiredUtxo"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex txid = 1;
   */
  txid?: ReverseHex;

  /**
   * @generated from field: uint32 vout = 2;
   */
  vout: number;
};

/**
 * Describes the message cusf.mainchain.v1.SendTransactionRequest.RequiredUtxo.
 * Use `create(SendTransactionRequest_RequiredUtxoSchema)` to create a new message.
 */
export declare const SendTransactionRequest_RequiredUtxoSchema: GenMessage<SendTransactionRequest_RequiredUtxo>;

/**
 * @generated from message cusf.mainchain.v1.SendTransactionResponse
 */
export declare type SendTransactionResponse = Message<"cusf.mainchain.v1.SendTransactionResponse"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex txid = 1;
   */
  txid?: ReverseHex;
};

/**
 * Describes the message cusf.mainchain.v1.SendTransactionResponse.
 * Use `create(SendTransactionResponseSchema)` to create a new message.
 */
export declare const SendTransactionResponseSchema: GenMessage<SendTransactionResponse>;

/**
 * @generated from message cusf.mainchain.v1.UnlockWalletRequest
 */
export declare type UnlockWalletRequest = Message<"cusf.mainchain.v1.UnlockWalletRequest"> & {
  /**
   * @generated from field: string password = 1;
   */
  password: string;
};

/**
 * Describes the message cusf.mainchain.v1.UnlockWalletRequest.
 * Use `create(UnlockWalletRequestSchema)` to create a new message.
 */
export declare const UnlockWalletRequestSchema: GenMessage<UnlockWalletRequest>;

/**
 * @generated from message cusf.mainchain.v1.UnlockWalletResponse
 */
export declare type UnlockWalletResponse = Message<"cusf.mainchain.v1.UnlockWalletResponse"> & {
};

/**
 * Describes the message cusf.mainchain.v1.UnlockWalletResponse.
 * Use `create(UnlockWalletResponseSchema)` to create a new message.
 */
export declare const UnlockWalletResponseSchema: GenMessage<UnlockWalletResponse>;

/**
 * @generated from message cusf.mainchain.v1.GenerateBlocksRequest
 */
export declare type GenerateBlocksRequest = Message<"cusf.mainchain.v1.GenerateBlocksRequest"> & {
  /**
   * Number of blocks to generate. 
   *
   * @generated from field: google.protobuf.UInt32Value blocks = 1;
   */
  blocks?: number;

  /**
   * ACK all sidechain proposals, irregardless of if they are already 
   * in the wallet DB. 
   *
   * @generated from field: bool ack_all_proposals = 2;
   */
  ackAllProposals: boolean;
};

/**
 * Describes the message cusf.mainchain.v1.GenerateBlocksRequest.
 * Use `create(GenerateBlocksRequestSchema)` to create a new message.
 */
export declare const GenerateBlocksRequestSchema: GenMessage<GenerateBlocksRequest>;

/**
 * @generated from message cusf.mainchain.v1.GenerateBlocksResponse
 */
export declare type GenerateBlocksResponse = Message<"cusf.mainchain.v1.GenerateBlocksResponse"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex block_hash = 1;
   */
  blockHash?: ReverseHex;
};

/**
 * Describes the message cusf.mainchain.v1.GenerateBlocksResponse.
 * Use `create(GenerateBlocksResponseSchema)` to create a new message.
 */
export declare const GenerateBlocksResponseSchema: GenMessage<GenerateBlocksResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetInfoRequest
 */
export declare type GetInfoRequest = Message<"cusf.mainchain.v1.GetInfoRequest"> & {
};

/**
 * Describes the message cusf.mainchain.v1.GetInfoRequest.
 * Use `create(GetInfoRequestSchema)` to create a new message.
 */
export declare const GetInfoRequestSchema: GenMessage<GetInfoRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetInfoResponse
 */
export declare type GetInfoResponse = Message<"cusf.mainchain.v1.GetInfoResponse"> & {
  /**
   * The network the wallet is on
   *
   * @generated from field: string network = 1;
   */
  network: string;

  /**
   * Total number of transactions in the wallet
   *
   * @generated from field: uint32 transaction_count = 2;
   */
  transactionCount: number;

  /**
   * Number of UTXOs in the wallet.
   *
   * @generated from field: uint32 unspent_output_count = 3;
   */
  unspentOutputCount: number;

  /**
   * @generated from field: map<string, string> descriptors = 4;
   */
  descriptors: { [key: string]: string };
};

/**
 * Describes the message cusf.mainchain.v1.GetInfoResponse.
 * Use `create(GetInfoResponseSchema)` to create a new message.
 */
export declare const GetInfoResponseSchema: GenMessage<GetInfoResponse>;

/**
 * @generated from message cusf.mainchain.v1.ListUnspentOutputsRequest
 */
export declare type ListUnspentOutputsRequest = Message<"cusf.mainchain.v1.ListUnspentOutputsRequest"> & {
};

/**
 * Describes the message cusf.mainchain.v1.ListUnspentOutputsRequest.
 * Use `create(ListUnspentOutputsRequestSchema)` to create a new message.
 */
export declare const ListUnspentOutputsRequestSchema: GenMessage<ListUnspentOutputsRequest>;

/**
 * @generated from message cusf.mainchain.v1.ListUnspentOutputsResponse
 */
export declare type ListUnspentOutputsResponse = Message<"cusf.mainchain.v1.ListUnspentOutputsResponse"> & {
  /**
   * @generated from field: repeated cusf.mainchain.v1.ListUnspentOutputsResponse.Output outputs = 1;
   */
  outputs: ListUnspentOutputsResponse_Output[];
};

/**
 * Describes the message cusf.mainchain.v1.ListUnspentOutputsResponse.
 * Use `create(ListUnspentOutputsResponseSchema)` to create a new message.
 */
export declare const ListUnspentOutputsResponseSchema: GenMessage<ListUnspentOutputsResponse>;

/**
 * @generated from message cusf.mainchain.v1.ListUnspentOutputsResponse.Output
 */
export declare type ListUnspentOutputsResponse_Output = Message<"cusf.mainchain.v1.ListUnspentOutputsResponse.Output"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex txid = 1;
   */
  txid?: ReverseHex;

  /**
   * @generated from field: uint32 vout = 2;
   */
  vout: number;

  /**
   * @generated from field: uint64 value_sats = 3;
   */
  valueSats: bigint;

  /**
   * An internal output is one that was created by the wallet itself
   * as change output for a transaction.
   *
   * @generated from field: bool is_internal = 4;
   */
  isInternal: boolean;

  /**
   * @generated from field: bool is_confirmed = 5;
   */
  isConfirmed: boolean;

  /**
   * @generated from field: uint32 confirmed_at_block = 6;
   */
  confirmedAtBlock: number;

  /**
   * @generated from field: google.protobuf.Timestamp confirmed_at_time = 7;
   */
  confirmedAtTime?: Timestamp;

  /**
   * @generated from field: cusf.common.v1.ReverseHex confirmed_transitively = 8;
   */
  confirmedTransitively?: ReverseHex;

  /**
   * @generated from field: google.protobuf.Timestamp unconfirmed_last_seen = 9;
   */
  unconfirmedLastSeen?: Timestamp;
};

/**
 * Describes the message cusf.mainchain.v1.ListUnspentOutputsResponse.Output.
 * Use `create(ListUnspentOutputsResponse_OutputSchema)` to create a new message.
 */
export declare const ListUnspentOutputsResponse_OutputSchema: GenMessage<ListUnspentOutputsResponse_Output>;

/**
 * @generated from service cusf.mainchain.v1.WalletService
 */
export declare const WalletService: GenService<{
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.BroadcastWithdrawalBundle
   */
  broadcastWithdrawalBundle: {
    methodKind: "unary";
    input: typeof BroadcastWithdrawalBundleRequestSchema;
    output: typeof BroadcastWithdrawalBundleResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.CreateBmmCriticalDataTransaction
   */
  createBmmCriticalDataTransaction: {
    methodKind: "unary";
    input: typeof CreateBmmCriticalDataTransactionRequestSchema;
    output: typeof CreateBmmCriticalDataTransactionResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.CreateDepositTransaction
   */
  createDepositTransaction: {
    methodKind: "unary";
    input: typeof CreateDepositTransactionRequestSchema;
    output: typeof CreateDepositTransactionResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.CreateNewAddress
   */
  createNewAddress: {
    methodKind: "unary";
    input: typeof CreateNewAddressRequestSchema;
    output: typeof CreateNewAddressResponseSchema;
  },
  /**
   * Create a new sidechain proposal (M1 in BIP300) and persist to the local
   * database for further processing.
   * Sidechain proposals must be included in the coinbase transaction of a
   * newly mined block, so this proposal is not active until the wallet has
   * been able to generate a new block.
   * Returns a stream of (non-)confirmation events for the sidechain proposal.
   *
   * @generated from rpc cusf.mainchain.v1.WalletService.CreateSidechainProposal
   */
  createSidechainProposal: {
    methodKind: "server_streaming";
    input: typeof CreateSidechainProposalRequestSchema;
    output: typeof CreateSidechainProposalResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.CreateWallet
   */
  createWallet: {
    methodKind: "unary";
    input: typeof CreateWalletRequestSchema;
    output: typeof CreateWalletResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.GetBalance
   */
  getBalance: {
    methodKind: "unary";
    input: typeof GetBalanceRequestSchema;
    output: typeof GetBalanceResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.ListSidechainDepositTransactions
   */
  listSidechainDepositTransactions: {
    methodKind: "unary";
    input: typeof ListSidechainDepositTransactionsRequestSchema;
    output: typeof ListSidechainDepositTransactionsResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.ListTransactions
   */
  listTransactions: {
    methodKind: "unary";
    input: typeof ListTransactionsRequestSchema;
    output: typeof ListTransactionsResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.ListUnspentOutputs
   */
  listUnspentOutputs: {
    methodKind: "unary";
    input: typeof ListUnspentOutputsRequestSchema;
    output: typeof ListUnspentOutputsResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.GetInfo
   */
  getInfo: {
    methodKind: "unary";
    input: typeof GetInfoRequestSchema;
    output: typeof GetInfoResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.SendTransaction
   */
  sendTransaction: {
    methodKind: "unary";
    input: typeof SendTransactionRequestSchema;
    output: typeof SendTransactionResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.WalletService.UnlockWallet
   */
  unlockWallet: {
    methodKind: "unary";
    input: typeof UnlockWalletRequestSchema;
    output: typeof UnlockWalletResponseSchema;
  },
  /**
   * Available on regtest and signet only.
   *
   * @generated from rpc cusf.mainchain.v1.WalletService.GenerateBlocks
   */
  generateBlocks: {
    methodKind: "server_streaming";
    input: typeof GenerateBlocksRequestSchema;
    output: typeof GenerateBlocksResponseSchema;
  },
}>;

