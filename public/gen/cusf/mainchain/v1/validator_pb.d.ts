// CUSF mainchain validator service 

// @generated by protoc-gen-es v2.2.5 with parameter "js_import_style=legacy_commonjs"
// @generated from file cusf/mainchain/v1/validator.proto (package cusf.mainchain.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { ConsensusHex, Hex, ReverseHex } from "../../common/v1/common_pb";
import type { OutPoint, SidechainDeclaration } from "./common_pb";

/**
 * Describes the file cusf/mainchain/v1/validator.proto.
 */
export declare const file_cusf_mainchain_v1_validator: GenFile;

/**
 * @generated from message cusf.mainchain.v1.BlockHeaderInfo
 */
export declare type BlockHeaderInfo = Message<"cusf.mainchain.v1.BlockHeaderInfo"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex block_hash = 1;
   */
  blockHash?: ReverseHex;

  /**
   * @generated from field: cusf.common.v1.ReverseHex prev_block_hash = 2;
   */
  prevBlockHash?: ReverseHex;

  /**
   * @generated from field: uint32 height = 3;
   */
  height: number;

  /**
   * Total work as a uint256, little-endian
   *
   * @generated from field: cusf.common.v1.ConsensusHex work = 4;
   */
  work?: ConsensusHex;
};

/**
 * Describes the message cusf.mainchain.v1.BlockHeaderInfo.
 * Use `create(BlockHeaderInfoSchema)` to create a new message.
 */
export declare const BlockHeaderInfoSchema: GenMessage<BlockHeaderInfo>;

/**
 * @generated from message cusf.mainchain.v1.Deposit
 */
export declare type Deposit = Message<"cusf.mainchain.v1.Deposit"> & {
  /**
   * @generated from field: google.protobuf.UInt64Value sequence_number = 1;
   */
  sequenceNumber?: bigint;

  /**
   * @generated from field: cusf.mainchain.v1.OutPoint outpoint = 2;
   */
  outpoint?: OutPoint;

  /**
   * @generated from field: cusf.mainchain.v1.Deposit.Output output = 3;
   */
  output?: Deposit_Output;
};

/**
 * Describes the message cusf.mainchain.v1.Deposit.
 * Use `create(DepositSchema)` to create a new message.
 */
export declare const DepositSchema: GenMessage<Deposit>;

/**
 * @generated from message cusf.mainchain.v1.Deposit.Output
 */
export declare type Deposit_Output = Message<"cusf.mainchain.v1.Deposit.Output"> & {
  /**
   * @generated from field: cusf.common.v1.Hex address = 2;
   */
  address?: Hex;

  /**
   * @generated from field: google.protobuf.UInt64Value value_sats = 3;
   */
  valueSats?: bigint;
};

/**
 * Describes the message cusf.mainchain.v1.Deposit.Output.
 * Use `create(Deposit_OutputSchema)` to create a new message.
 */
export declare const Deposit_OutputSchema: GenMessage<Deposit_Output>;

/**
 * @generated from message cusf.mainchain.v1.WithdrawalBundleEvent
 */
export declare type WithdrawalBundleEvent = Message<"cusf.mainchain.v1.WithdrawalBundleEvent"> & {
  /**
   * @generated from field: cusf.common.v1.ConsensusHex m6id = 1;
   */
  m6id?: ConsensusHex;

  /**
   * @generated from field: cusf.mainchain.v1.WithdrawalBundleEvent.Event event = 2;
   */
  event?: WithdrawalBundleEvent_Event;
};

/**
 * Describes the message cusf.mainchain.v1.WithdrawalBundleEvent.
 * Use `create(WithdrawalBundleEventSchema)` to create a new message.
 */
export declare const WithdrawalBundleEventSchema: GenMessage<WithdrawalBundleEvent>;

/**
 * @generated from message cusf.mainchain.v1.WithdrawalBundleEvent.Event
 */
export declare type WithdrawalBundleEvent_Event = Message<"cusf.mainchain.v1.WithdrawalBundleEvent.Event"> & {
  /**
   * @generated from oneof cusf.mainchain.v1.WithdrawalBundleEvent.Event.event
   */
  event: {
    /**
     * @generated from field: cusf.mainchain.v1.WithdrawalBundleEvent.Event.Failed failed = 1;
     */
    value: WithdrawalBundleEvent_Event_Failed;
    case: "failed";
  } | {
    /**
     * @generated from field: cusf.mainchain.v1.WithdrawalBundleEvent.Event.Succeeded succeeded = 2;
     */
    value: WithdrawalBundleEvent_Event_Succeeded;
    case: "succeeded";
  } | {
    /**
     * @generated from field: cusf.mainchain.v1.WithdrawalBundleEvent.Event.Submitted submitted = 3;
     */
    value: WithdrawalBundleEvent_Event_Submitted;
    case: "submitted";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message cusf.mainchain.v1.WithdrawalBundleEvent.Event.
 * Use `create(WithdrawalBundleEvent_EventSchema)` to create a new message.
 */
export declare const WithdrawalBundleEvent_EventSchema: GenMessage<WithdrawalBundleEvent_Event>;

/**
 * @generated from message cusf.mainchain.v1.WithdrawalBundleEvent.Event.Failed
 */
export declare type WithdrawalBundleEvent_Event_Failed = Message<"cusf.mainchain.v1.WithdrawalBundleEvent.Event.Failed"> & {
};

/**
 * Describes the message cusf.mainchain.v1.WithdrawalBundleEvent.Event.Failed.
 * Use `create(WithdrawalBundleEvent_Event_FailedSchema)` to create a new message.
 */
export declare const WithdrawalBundleEvent_Event_FailedSchema: GenMessage<WithdrawalBundleEvent_Event_Failed>;

/**
 * @generated from message cusf.mainchain.v1.WithdrawalBundleEvent.Event.Succeeded
 */
export declare type WithdrawalBundleEvent_Event_Succeeded = Message<"cusf.mainchain.v1.WithdrawalBundleEvent.Event.Succeeded"> & {
  /**
   * @generated from field: google.protobuf.UInt64Value sequence_number = 1;
   */
  sequenceNumber?: bigint;

  /**
   * @generated from field: cusf.common.v1.ConsensusHex transaction = 2;
   */
  transaction?: ConsensusHex;
};

/**
 * Describes the message cusf.mainchain.v1.WithdrawalBundleEvent.Event.Succeeded.
 * Use `create(WithdrawalBundleEvent_Event_SucceededSchema)` to create a new message.
 */
export declare const WithdrawalBundleEvent_Event_SucceededSchema: GenMessage<WithdrawalBundleEvent_Event_Succeeded>;

/**
 * @generated from message cusf.mainchain.v1.WithdrawalBundleEvent.Event.Submitted
 */
export declare type WithdrawalBundleEvent_Event_Submitted = Message<"cusf.mainchain.v1.WithdrawalBundleEvent.Event.Submitted"> & {
};

/**
 * Describes the message cusf.mainchain.v1.WithdrawalBundleEvent.Event.Submitted.
 * Use `create(WithdrawalBundleEvent_Event_SubmittedSchema)` to create a new message.
 */
export declare const WithdrawalBundleEvent_Event_SubmittedSchema: GenMessage<WithdrawalBundleEvent_Event_Submitted>;

/**
 * Specific to an individual sidechain slot
 *
 * @generated from message cusf.mainchain.v1.BlockInfo
 */
export declare type BlockInfo = Message<"cusf.mainchain.v1.BlockInfo"> & {
  /**
   * repeated Deposit deposits = 1;
   * repeated WithdrawalBundleEvent withdrawal_bundle_events = 2;
   *
   * @generated from field: optional cusf.common.v1.ConsensusHex bmm_commitment = 1;
   */
  bmmCommitment?: ConsensusHex;

  /**
   * @generated from field: repeated cusf.mainchain.v1.BlockInfo.Event events = 2;
   */
  events: BlockInfo_Event[];
};

/**
 * Describes the message cusf.mainchain.v1.BlockInfo.
 * Use `create(BlockInfoSchema)` to create a new message.
 */
export declare const BlockInfoSchema: GenMessage<BlockInfo>;

/**
 * @generated from message cusf.mainchain.v1.BlockInfo.Event
 */
export declare type BlockInfo_Event = Message<"cusf.mainchain.v1.BlockInfo.Event"> & {
  /**
   * @generated from oneof cusf.mainchain.v1.BlockInfo.Event.event
   */
  event: {
    /**
     * @generated from field: cusf.mainchain.v1.Deposit deposit = 1;
     */
    value: Deposit;
    case: "deposit";
  } | {
    /**
     * @generated from field: cusf.mainchain.v1.WithdrawalBundleEvent withdrawal_bundle = 2;
     */
    value: WithdrawalBundleEvent;
    case: "withdrawalBundle";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message cusf.mainchain.v1.BlockInfo.Event.
 * Use `create(BlockInfo_EventSchema)` to create a new message.
 */
export declare const BlockInfo_EventSchema: GenMessage<BlockInfo_Event>;

/**
 * @generated from message cusf.mainchain.v1.GetBlockHeaderInfoRequest
 */
export declare type GetBlockHeaderInfoRequest = Message<"cusf.mainchain.v1.GetBlockHeaderInfoRequest"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex block_hash = 1;
   */
  blockHash?: ReverseHex;

  /**
   * Request block header info for up to `max_ancestors` ancestors.
   * Fewer ancestors MAY be returned.
   *
   * @generated from field: optional uint32 max_ancestors = 2;
   */
  maxAncestors?: number;
};

/**
 * Describes the message cusf.mainchain.v1.GetBlockHeaderInfoRequest.
 * Use `create(GetBlockHeaderInfoRequestSchema)` to create a new message.
 */
export declare const GetBlockHeaderInfoRequestSchema: GenMessage<GetBlockHeaderInfoRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetBlockHeaderInfoResponse
 */
export declare type GetBlockHeaderInfoResponse = Message<"cusf.mainchain.v1.GetBlockHeaderInfoResponse"> & {
  /**
   * @generated from field: cusf.mainchain.v1.BlockHeaderInfo header_info = 1;
   */
  headerInfo?: BlockHeaderInfo;

  /**
   * Ancestors MUST be sorted newest-first
   *
   * @generated from field: repeated cusf.mainchain.v1.BlockHeaderInfo ancestor_infos = 2;
   */
  ancestorInfos: BlockHeaderInfo[];
};

/**
 * Describes the message cusf.mainchain.v1.GetBlockHeaderInfoResponse.
 * Use `create(GetBlockHeaderInfoResponseSchema)` to create a new message.
 */
export declare const GetBlockHeaderInfoResponseSchema: GenMessage<GetBlockHeaderInfoResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetBlockInfoRequest
 */
export declare type GetBlockInfoRequest = Message<"cusf.mainchain.v1.GetBlockInfoRequest"> & {
  /**
   * The block to fetch information about.
   *
   * @generated from field: cusf.common.v1.ReverseHex block_hash = 1;
   */
  blockHash?: ReverseHex;

  /**
   * The sidechain to filter for events relating to.
   *
   * @generated from field: google.protobuf.UInt32Value sidechain_id = 2;
   */
  sidechainId?: number;

  /**
   * Request block info for up to `max_ancestors` ancestors.
   * Fewer ancestors MAY be returned.
   *
   * @generated from field: optional uint32 max_ancestors = 3;
   */
  maxAncestors?: number;
};

/**
 * Describes the message cusf.mainchain.v1.GetBlockInfoRequest.
 * Use `create(GetBlockInfoRequestSchema)` to create a new message.
 */
export declare const GetBlockInfoRequestSchema: GenMessage<GetBlockInfoRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetBlockInfoResponse
 */
export declare type GetBlockInfoResponse = Message<"cusf.mainchain.v1.GetBlockInfoResponse"> & {
  /**
   * @generated from field: cusf.mainchain.v1.GetBlockInfoResponse.Info info = 1;
   */
  info?: GetBlockInfoResponse_Info;

  /**
   * Ancestors MUST be sorted newest-first
   *
   * @generated from field: repeated cusf.mainchain.v1.GetBlockInfoResponse.Info ancestor_infos = 2;
   */
  ancestorInfos: GetBlockInfoResponse_Info[];
};

/**
 * Describes the message cusf.mainchain.v1.GetBlockInfoResponse.
 * Use `create(GetBlockInfoResponseSchema)` to create a new message.
 */
export declare const GetBlockInfoResponseSchema: GenMessage<GetBlockInfoResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetBlockInfoResponse.Info
 */
export declare type GetBlockInfoResponse_Info = Message<"cusf.mainchain.v1.GetBlockInfoResponse.Info"> & {
  /**
   * Information about the block itself.
   *
   * @generated from field: cusf.mainchain.v1.BlockHeaderInfo header_info = 1;
   */
  headerInfo?: BlockHeaderInfo;

  /**
   * Information about the block, filtered for events relating to a specific
   * sidechain.
   *
   * @generated from field: cusf.mainchain.v1.BlockInfo block_info = 2;
   */
  blockInfo?: BlockInfo;
};

/**
 * Describes the message cusf.mainchain.v1.GetBlockInfoResponse.Info.
 * Use `create(GetBlockInfoResponse_InfoSchema)` to create a new message.
 */
export declare const GetBlockInfoResponse_InfoSchema: GenMessage<GetBlockInfoResponse_Info>;

/**
 * @generated from message cusf.mainchain.v1.GetBmmHStarCommitmentRequest
 */
export declare type GetBmmHStarCommitmentRequest = Message<"cusf.mainchain.v1.GetBmmHStarCommitmentRequest"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex block_hash = 1;
   */
  blockHash?: ReverseHex;

  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_id = 2;
   */
  sidechainId?: number;

  /**
   * Request commitments for up to `max_ancestors` ancestors.
   * Fewer ancestors MAY be returned.
   *
   * @generated from field: optional uint32 max_ancestors = 3;
   */
  maxAncestors?: number;
};

/**
 * Describes the message cusf.mainchain.v1.GetBmmHStarCommitmentRequest.
 * Use `create(GetBmmHStarCommitmentRequestSchema)` to create a new message.
 */
export declare const GetBmmHStarCommitmentRequestSchema: GenMessage<GetBmmHStarCommitmentRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetBmmHStarCommitmentResponse
 */
export declare type GetBmmHStarCommitmentResponse = Message<"cusf.mainchain.v1.GetBmmHStarCommitmentResponse"> & {
  /**
   * @generated from oneof cusf.mainchain.v1.GetBmmHStarCommitmentResponse.result
   */
  result: {
    /**
     * @generated from field: cusf.mainchain.v1.GetBmmHStarCommitmentResponse.BlockNotFoundError block_not_found = 1;
     */
    value: GetBmmHStarCommitmentResponse_BlockNotFoundError;
    case: "blockNotFound";
  } | {
    /**
     * @generated from field: cusf.mainchain.v1.GetBmmHStarCommitmentResponse.Commitment commitment = 2;
     */
    value: GetBmmHStarCommitmentResponse_Commitment;
    case: "commitment";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message cusf.mainchain.v1.GetBmmHStarCommitmentResponse.
 * Use `create(GetBmmHStarCommitmentResponseSchema)` to create a new message.
 */
export declare const GetBmmHStarCommitmentResponseSchema: GenMessage<GetBmmHStarCommitmentResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetBmmHStarCommitmentResponse.BlockNotFoundError
 */
export declare type GetBmmHStarCommitmentResponse_BlockNotFoundError = Message<"cusf.mainchain.v1.GetBmmHStarCommitmentResponse.BlockNotFoundError"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex block_hash = 1;
   */
  blockHash?: ReverseHex;
};

/**
 * Describes the message cusf.mainchain.v1.GetBmmHStarCommitmentResponse.BlockNotFoundError.
 * Use `create(GetBmmHStarCommitmentResponse_BlockNotFoundErrorSchema)` to create a new message.
 */
export declare const GetBmmHStarCommitmentResponse_BlockNotFoundErrorSchema: GenMessage<GetBmmHStarCommitmentResponse_BlockNotFoundError>;

/**
 * @generated from message cusf.mainchain.v1.GetBmmHStarCommitmentResponse.OptionalCommitment
 */
export declare type GetBmmHStarCommitmentResponse_OptionalCommitment = Message<"cusf.mainchain.v1.GetBmmHStarCommitmentResponse.OptionalCommitment"> & {
  /**
   * @generated from field: optional cusf.common.v1.ConsensusHex commitment = 1;
   */
  commitment?: ConsensusHex;
};

/**
 * Describes the message cusf.mainchain.v1.GetBmmHStarCommitmentResponse.OptionalCommitment.
 * Use `create(GetBmmHStarCommitmentResponse_OptionalCommitmentSchema)` to create a new message.
 */
export declare const GetBmmHStarCommitmentResponse_OptionalCommitmentSchema: GenMessage<GetBmmHStarCommitmentResponse_OptionalCommitment>;

/**
 * @generated from message cusf.mainchain.v1.GetBmmHStarCommitmentResponse.Commitment
 */
export declare type GetBmmHStarCommitmentResponse_Commitment = Message<"cusf.mainchain.v1.GetBmmHStarCommitmentResponse.Commitment"> & {
  /**
   * @generated from field: optional cusf.common.v1.ConsensusHex commitment = 1;
   */
  commitment?: ConsensusHex;

  /**
   * Ancestors MUST be sorted newest-first
   *
   * @generated from field: repeated cusf.mainchain.v1.GetBmmHStarCommitmentResponse.OptionalCommitment ancestor_commitments = 2;
   */
  ancestorCommitments: GetBmmHStarCommitmentResponse_OptionalCommitment[];
};

/**
 * Describes the message cusf.mainchain.v1.GetBmmHStarCommitmentResponse.Commitment.
 * Use `create(GetBmmHStarCommitmentResponse_CommitmentSchema)` to create a new message.
 */
export declare const GetBmmHStarCommitmentResponse_CommitmentSchema: GenMessage<GetBmmHStarCommitmentResponse_Commitment>;

/**
 * @generated from message cusf.mainchain.v1.GetChainInfoRequest
 */
export declare type GetChainInfoRequest = Message<"cusf.mainchain.v1.GetChainInfoRequest"> & {
};

/**
 * Describes the message cusf.mainchain.v1.GetChainInfoRequest.
 * Use `create(GetChainInfoRequestSchema)` to create a new message.
 */
export declare const GetChainInfoRequestSchema: GenMessage<GetChainInfoRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetChainInfoResponse
 */
export declare type GetChainInfoResponse = Message<"cusf.mainchain.v1.GetChainInfoResponse"> & {
  /**
   * @generated from field: cusf.mainchain.v1.Network network = 1;
   */
  network: Network;
};

/**
 * Describes the message cusf.mainchain.v1.GetChainInfoResponse.
 * Use `create(GetChainInfoResponseSchema)` to create a new message.
 */
export declare const GetChainInfoResponseSchema: GenMessage<GetChainInfoResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetChainTipRequest
 */
export declare type GetChainTipRequest = Message<"cusf.mainchain.v1.GetChainTipRequest"> & {
};

/**
 * Describes the message cusf.mainchain.v1.GetChainTipRequest.
 * Use `create(GetChainTipRequestSchema)` to create a new message.
 */
export declare const GetChainTipRequestSchema: GenMessage<GetChainTipRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetChainTipResponse
 */
export declare type GetChainTipResponse = Message<"cusf.mainchain.v1.GetChainTipResponse"> & {
  /**
   * @generated from field: cusf.mainchain.v1.BlockHeaderInfo block_header_info = 1;
   */
  blockHeaderInfo?: BlockHeaderInfo;
};

/**
 * Describes the message cusf.mainchain.v1.GetChainTipResponse.
 * Use `create(GetChainTipResponseSchema)` to create a new message.
 */
export declare const GetChainTipResponseSchema: GenMessage<GetChainTipResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetCoinbasePSBTRequest
 */
export declare type GetCoinbasePSBTRequest = Message<"cusf.mainchain.v1.GetCoinbasePSBTRequest"> & {
  /**
   * @generated from field: repeated cusf.mainchain.v1.GetCoinbasePSBTRequest.ProposeSidechain propose_sidechains = 1;
   */
  proposeSidechains: GetCoinbasePSBTRequest_ProposeSidechain[];

  /**
   * @generated from field: repeated cusf.mainchain.v1.GetCoinbasePSBTRequest.AckSidechain ack_sidechains = 2;
   */
  ackSidechains: GetCoinbasePSBTRequest_AckSidechain[];

  /**
   * @generated from field: repeated cusf.mainchain.v1.GetCoinbasePSBTRequest.ProposeBundle propose_bundles = 3;
   */
  proposeBundles: GetCoinbasePSBTRequest_ProposeBundle[];

  /**
   * @generated from field: cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles ack_bundles = 4;
   */
  ackBundles?: GetCoinbasePSBTRequest_AckBundles;
};

/**
 * Describes the message cusf.mainchain.v1.GetCoinbasePSBTRequest.
 * Use `create(GetCoinbasePSBTRequestSchema)` to create a new message.
 */
export declare const GetCoinbasePSBTRequestSchema: GenMessage<GetCoinbasePSBTRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetCoinbasePSBTRequest.ProposeSidechain
 */
export declare type GetCoinbasePSBTRequest_ProposeSidechain = Message<"cusf.mainchain.v1.GetCoinbasePSBTRequest.ProposeSidechain"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_number = 1;
   */
  sidechainNumber?: number;

  /**
   * @generated from field: cusf.common.v1.ConsensusHex data = 2;
   */
  data?: ConsensusHex;
};

/**
 * Describes the message cusf.mainchain.v1.GetCoinbasePSBTRequest.ProposeSidechain.
 * Use `create(GetCoinbasePSBTRequest_ProposeSidechainSchema)` to create a new message.
 */
export declare const GetCoinbasePSBTRequest_ProposeSidechainSchema: GenMessage<GetCoinbasePSBTRequest_ProposeSidechain>;

/**
 * @generated from message cusf.mainchain.v1.GetCoinbasePSBTRequest.AckSidechain
 */
export declare type GetCoinbasePSBTRequest_AckSidechain = Message<"cusf.mainchain.v1.GetCoinbasePSBTRequest.AckSidechain"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_number = 1;
   */
  sidechainNumber?: number;

  /**
   * @generated from field: cusf.common.v1.ConsensusHex data_hash = 2;
   */
  dataHash?: ConsensusHex;
};

/**
 * Describes the message cusf.mainchain.v1.GetCoinbasePSBTRequest.AckSidechain.
 * Use `create(GetCoinbasePSBTRequest_AckSidechainSchema)` to create a new message.
 */
export declare const GetCoinbasePSBTRequest_AckSidechainSchema: GenMessage<GetCoinbasePSBTRequest_AckSidechain>;

/**
 * @generated from message cusf.mainchain.v1.GetCoinbasePSBTRequest.ProposeBundle
 */
export declare type GetCoinbasePSBTRequest_ProposeBundle = Message<"cusf.mainchain.v1.GetCoinbasePSBTRequest.ProposeBundle"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_number = 1;
   */
  sidechainNumber?: number;

  /**
   * @generated from field: cusf.common.v1.ReverseHex bundle_txid = 2;
   */
  bundleTxid?: ReverseHex;
};

/**
 * Describes the message cusf.mainchain.v1.GetCoinbasePSBTRequest.ProposeBundle.
 * Use `create(GetCoinbasePSBTRequest_ProposeBundleSchema)` to create a new message.
 */
export declare const GetCoinbasePSBTRequest_ProposeBundleSchema: GenMessage<GetCoinbasePSBTRequest_ProposeBundle>;

/**
 * @generated from message cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles
 */
export declare type GetCoinbasePSBTRequest_AckBundles = Message<"cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles"> & {
  /**
   * @generated from oneof cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.ack_bundles
   */
  ackBundles: {
    /**
     * @generated from field: cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.RepeatPrevious repeat_previous = 1;
     */
    value: GetCoinbasePSBTRequest_AckBundles_RepeatPrevious;
    case: "repeatPrevious";
  } | {
    /**
     * @generated from field: cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.LeadingBy50 leading_by_50 = 2;
     */
    value: GetCoinbasePSBTRequest_AckBundles_LeadingBy50;
    case: "leadingBy50";
  } | {
    /**
     * @generated from field: cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.Upvotes upvotes = 3;
     */
    value: GetCoinbasePSBTRequest_AckBundles_Upvotes;
    case: "upvotes";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.
 * Use `create(GetCoinbasePSBTRequest_AckBundlesSchema)` to create a new message.
 */
export declare const GetCoinbasePSBTRequest_AckBundlesSchema: GenMessage<GetCoinbasePSBTRequest_AckBundles>;

/**
 * @generated from message cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.RepeatPrevious
 */
export declare type GetCoinbasePSBTRequest_AckBundles_RepeatPrevious = Message<"cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.RepeatPrevious"> & {
};

/**
 * Describes the message cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.RepeatPrevious.
 * Use `create(GetCoinbasePSBTRequest_AckBundles_RepeatPreviousSchema)` to create a new message.
 */
export declare const GetCoinbasePSBTRequest_AckBundles_RepeatPreviousSchema: GenMessage<GetCoinbasePSBTRequest_AckBundles_RepeatPrevious>;

/**
 * @generated from message cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.LeadingBy50
 */
export declare type GetCoinbasePSBTRequest_AckBundles_LeadingBy50 = Message<"cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.LeadingBy50"> & {
};

/**
 * Describes the message cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.LeadingBy50.
 * Use `create(GetCoinbasePSBTRequest_AckBundles_LeadingBy50Schema)` to create a new message.
 */
export declare const GetCoinbasePSBTRequest_AckBundles_LeadingBy50Schema: GenMessage<GetCoinbasePSBTRequest_AckBundles_LeadingBy50>;

/**
 * @generated from message cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.Upvotes
 */
export declare type GetCoinbasePSBTRequest_AckBundles_Upvotes = Message<"cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.Upvotes"> & {
  /**
   * @generated from field: repeated uint32 upvotes = 1;
   */
  upvotes: number[];
};

/**
 * Describes the message cusf.mainchain.v1.GetCoinbasePSBTRequest.AckBundles.Upvotes.
 * Use `create(GetCoinbasePSBTRequest_AckBundles_UpvotesSchema)` to create a new message.
 */
export declare const GetCoinbasePSBTRequest_AckBundles_UpvotesSchema: GenMessage<GetCoinbasePSBTRequest_AckBundles_Upvotes>;

/**
 * @generated from message cusf.mainchain.v1.GetCoinbasePSBTResponse
 */
export declare type GetCoinbasePSBTResponse = Message<"cusf.mainchain.v1.GetCoinbasePSBTResponse"> & {
  /**
   * @generated from field: cusf.common.v1.ConsensusHex psbt = 1;
   */
  psbt?: ConsensusHex;
};

/**
 * Describes the message cusf.mainchain.v1.GetCoinbasePSBTResponse.
 * Use `create(GetCoinbasePSBTResponseSchema)` to create a new message.
 */
export declare const GetCoinbasePSBTResponseSchema: GenMessage<GetCoinbasePSBTResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetCtipRequest
 */
export declare type GetCtipRequest = Message<"cusf.mainchain.v1.GetCtipRequest"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_number = 1;
   */
  sidechainNumber?: number;
};

/**
 * Describes the message cusf.mainchain.v1.GetCtipRequest.
 * Use `create(GetCtipRequestSchema)` to create a new message.
 */
export declare const GetCtipRequestSchema: GenMessage<GetCtipRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetCtipResponse
 */
export declare type GetCtipResponse = Message<"cusf.mainchain.v1.GetCtipResponse"> & {
  /**
   * @generated from field: optional cusf.mainchain.v1.GetCtipResponse.Ctip ctip = 1;
   */
  ctip?: GetCtipResponse_Ctip;
};

/**
 * Describes the message cusf.mainchain.v1.GetCtipResponse.
 * Use `create(GetCtipResponseSchema)` to create a new message.
 */
export declare const GetCtipResponseSchema: GenMessage<GetCtipResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetCtipResponse.Ctip
 */
export declare type GetCtipResponse_Ctip = Message<"cusf.mainchain.v1.GetCtipResponse.Ctip"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex txid = 1;
   */
  txid?: ReverseHex;

  /**
   * @generated from field: uint32 vout = 2;
   */
  vout: number;

  /**
   * @generated from field: uint64 value = 3;
   */
  value: bigint;

  /**
   * @generated from field: uint64 sequence_number = 4;
   */
  sequenceNumber: bigint;
};

/**
 * Describes the message cusf.mainchain.v1.GetCtipResponse.Ctip.
 * Use `create(GetCtipResponse_CtipSchema)` to create a new message.
 */
export declare const GetCtipResponse_CtipSchema: GenMessage<GetCtipResponse_Ctip>;

/**
 * @generated from message cusf.mainchain.v1.GetSidechainProposalsRequest
 */
export declare type GetSidechainProposalsRequest = Message<"cusf.mainchain.v1.GetSidechainProposalsRequest"> & {
};

/**
 * Describes the message cusf.mainchain.v1.GetSidechainProposalsRequest.
 * Use `create(GetSidechainProposalsRequestSchema)` to create a new message.
 */
export declare const GetSidechainProposalsRequestSchema: GenMessage<GetSidechainProposalsRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetSidechainProposalsResponse
 */
export declare type GetSidechainProposalsResponse = Message<"cusf.mainchain.v1.GetSidechainProposalsResponse"> & {
  /**
   * @generated from field: repeated cusf.mainchain.v1.GetSidechainProposalsResponse.SidechainProposal sidechain_proposals = 1;
   */
  sidechainProposals: GetSidechainProposalsResponse_SidechainProposal[];
};

/**
 * Describes the message cusf.mainchain.v1.GetSidechainProposalsResponse.
 * Use `create(GetSidechainProposalsResponseSchema)` to create a new message.
 */
export declare const GetSidechainProposalsResponseSchema: GenMessage<GetSidechainProposalsResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetSidechainProposalsResponse.SidechainProposal
 */
export declare type GetSidechainProposalsResponse_SidechainProposal = Message<"cusf.mainchain.v1.GetSidechainProposalsResponse.SidechainProposal"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_number = 1;
   */
  sidechainNumber?: number;

  /**
   * Raw sidechain proposal description
   *
   * @generated from field: cusf.common.v1.ConsensusHex description = 2;
   */
  description?: ConsensusHex;

  /**
   * Sidechain data, as declared in the M1 proposal.
   * Might be nil, if the proposal uses an unknown version.
   *
   * @generated from field: optional cusf.mainchain.v1.SidechainDeclaration declaration = 7;
   */
  declaration?: SidechainDeclaration;

  /**
   * @generated from field: cusf.common.v1.ReverseHex description_sha256d_hash = 3;
   */
  descriptionSha256dHash?: ReverseHex;

  /**
   * @generated from field: google.protobuf.UInt32Value vote_count = 4;
   */
  voteCount?: number;

  /**
   * @generated from field: google.protobuf.UInt32Value proposal_height = 5;
   */
  proposalHeight?: number;

  /**
   * @generated from field: google.protobuf.UInt32Value proposal_age = 6;
   */
  proposalAge?: number;
};

/**
 * Describes the message cusf.mainchain.v1.GetSidechainProposalsResponse.SidechainProposal.
 * Use `create(GetSidechainProposalsResponse_SidechainProposalSchema)` to create a new message.
 */
export declare const GetSidechainProposalsResponse_SidechainProposalSchema: GenMessage<GetSidechainProposalsResponse_SidechainProposal>;

/**
 * @generated from message cusf.mainchain.v1.GetSidechainsRequest
 */
export declare type GetSidechainsRequest = Message<"cusf.mainchain.v1.GetSidechainsRequest"> & {
};

/**
 * Describes the message cusf.mainchain.v1.GetSidechainsRequest.
 * Use `create(GetSidechainsRequestSchema)` to create a new message.
 */
export declare const GetSidechainsRequestSchema: GenMessage<GetSidechainsRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetSidechainsResponse
 */
export declare type GetSidechainsResponse = Message<"cusf.mainchain.v1.GetSidechainsResponse"> & {
  /**
   * @generated from field: repeated cusf.mainchain.v1.GetSidechainsResponse.SidechainInfo sidechains = 1;
   */
  sidechains: GetSidechainsResponse_SidechainInfo[];
};

/**
 * Describes the message cusf.mainchain.v1.GetSidechainsResponse.
 * Use `create(GetSidechainsResponseSchema)` to create a new message.
 */
export declare const GetSidechainsResponseSchema: GenMessage<GetSidechainsResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetSidechainsResponse.SidechainInfo
 */
export declare type GetSidechainsResponse_SidechainInfo = Message<"cusf.mainchain.v1.GetSidechainsResponse.SidechainInfo"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_number = 1;
   */
  sidechainNumber?: number;

  /**
   * @generated from field: cusf.common.v1.ConsensusHex description = 2;
   */
  description?: ConsensusHex;

  /**
   * @generated from field: google.protobuf.UInt32Value vote_count = 3;
   */
  voteCount?: number;

  /**
   * @generated from field: google.protobuf.UInt32Value proposal_height = 4;
   */
  proposalHeight?: number;

  /**
   * @generated from field: google.protobuf.UInt32Value activation_height = 5;
   */
  activationHeight?: number;

  /**
   * Sidechain data, as declared in the M1 proposal.
   * Might be nil, if the proposal uses an unknown version.
   *
   * @generated from field: optional cusf.mainchain.v1.SidechainDeclaration declaration = 6;
   */
  declaration?: SidechainDeclaration;
};

/**
 * Describes the message cusf.mainchain.v1.GetSidechainsResponse.SidechainInfo.
 * Use `create(GetSidechainsResponse_SidechainInfoSchema)` to create a new message.
 */
export declare const GetSidechainsResponse_SidechainInfoSchema: GenMessage<GetSidechainsResponse_SidechainInfo>;

/**
 * @generated from message cusf.mainchain.v1.GetTwoWayPegDataRequest
 */
export declare type GetTwoWayPegDataRequest = Message<"cusf.mainchain.v1.GetTwoWayPegDataRequest"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_id = 1;
   */
  sidechainId?: number;

  /**
   * @generated from field: optional cusf.common.v1.ReverseHex start_block_hash = 2;
   */
  startBlockHash?: ReverseHex;

  /**
   * @generated from field: cusf.common.v1.ReverseHex end_block_hash = 3;
   */
  endBlockHash?: ReverseHex;
};

/**
 * Describes the message cusf.mainchain.v1.GetTwoWayPegDataRequest.
 * Use `create(GetTwoWayPegDataRequestSchema)` to create a new message.
 */
export declare const GetTwoWayPegDataRequestSchema: GenMessage<GetTwoWayPegDataRequest>;

/**
 * @generated from message cusf.mainchain.v1.GetTwoWayPegDataResponse
 */
export declare type GetTwoWayPegDataResponse = Message<"cusf.mainchain.v1.GetTwoWayPegDataResponse"> & {
  /**
   * @generated from field: repeated cusf.mainchain.v1.GetTwoWayPegDataResponse.ResponseItem blocks = 1;
   */
  blocks: GetTwoWayPegDataResponse_ResponseItem[];
};

/**
 * Describes the message cusf.mainchain.v1.GetTwoWayPegDataResponse.
 * Use `create(GetTwoWayPegDataResponseSchema)` to create a new message.
 */
export declare const GetTwoWayPegDataResponseSchema: GenMessage<GetTwoWayPegDataResponse>;

/**
 * @generated from message cusf.mainchain.v1.GetTwoWayPegDataResponse.ResponseItem
 */
export declare type GetTwoWayPegDataResponse_ResponseItem = Message<"cusf.mainchain.v1.GetTwoWayPegDataResponse.ResponseItem"> & {
  /**
   * @generated from field: cusf.mainchain.v1.BlockHeaderInfo block_header_info = 1;
   */
  blockHeaderInfo?: BlockHeaderInfo;

  /**
   * @generated from field: cusf.mainchain.v1.BlockInfo block_info = 2;
   */
  blockInfo?: BlockInfo;
};

/**
 * Describes the message cusf.mainchain.v1.GetTwoWayPegDataResponse.ResponseItem.
 * Use `create(GetTwoWayPegDataResponse_ResponseItemSchema)` to create a new message.
 */
export declare const GetTwoWayPegDataResponse_ResponseItemSchema: GenMessage<GetTwoWayPegDataResponse_ResponseItem>;

/**
 * @generated from message cusf.mainchain.v1.SubscribeEventsRequest
 */
export declare type SubscribeEventsRequest = Message<"cusf.mainchain.v1.SubscribeEventsRequest"> & {
  /**
   * @generated from field: google.protobuf.UInt32Value sidechain_id = 1;
   */
  sidechainId?: number;
};

/**
 * Describes the message cusf.mainchain.v1.SubscribeEventsRequest.
 * Use `create(SubscribeEventsRequestSchema)` to create a new message.
 */
export declare const SubscribeEventsRequestSchema: GenMessage<SubscribeEventsRequest>;

/**
 * @generated from message cusf.mainchain.v1.SubscribeEventsResponse
 */
export declare type SubscribeEventsResponse = Message<"cusf.mainchain.v1.SubscribeEventsResponse"> & {
  /**
   * @generated from field: cusf.mainchain.v1.SubscribeEventsResponse.Event event = 1;
   */
  event?: SubscribeEventsResponse_Event;
};

/**
 * Describes the message cusf.mainchain.v1.SubscribeEventsResponse.
 * Use `create(SubscribeEventsResponseSchema)` to create a new message.
 */
export declare const SubscribeEventsResponseSchema: GenMessage<SubscribeEventsResponse>;

/**
 * @generated from message cusf.mainchain.v1.SubscribeEventsResponse.Event
 */
export declare type SubscribeEventsResponse_Event = Message<"cusf.mainchain.v1.SubscribeEventsResponse.Event"> & {
  /**
   * @generated from oneof cusf.mainchain.v1.SubscribeEventsResponse.Event.event
   */
  event: {
    /**
     * @generated from field: cusf.mainchain.v1.SubscribeEventsResponse.Event.ConnectBlock connect_block = 1;
     */
    value: SubscribeEventsResponse_Event_ConnectBlock;
    case: "connectBlock";
  } | {
    /**
     * @generated from field: cusf.mainchain.v1.SubscribeEventsResponse.Event.DisconnectBlock disconnect_block = 2;
     */
    value: SubscribeEventsResponse_Event_DisconnectBlock;
    case: "disconnectBlock";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message cusf.mainchain.v1.SubscribeEventsResponse.Event.
 * Use `create(SubscribeEventsResponse_EventSchema)` to create a new message.
 */
export declare const SubscribeEventsResponse_EventSchema: GenMessage<SubscribeEventsResponse_Event>;

/**
 * @generated from message cusf.mainchain.v1.SubscribeEventsResponse.Event.ConnectBlock
 */
export declare type SubscribeEventsResponse_Event_ConnectBlock = Message<"cusf.mainchain.v1.SubscribeEventsResponse.Event.ConnectBlock"> & {
  /**
   * @generated from field: cusf.mainchain.v1.BlockHeaderInfo header_info = 1;
   */
  headerInfo?: BlockHeaderInfo;

  /**
   * @generated from field: cusf.mainchain.v1.BlockInfo block_info = 2;
   */
  blockInfo?: BlockInfo;
};

/**
 * Describes the message cusf.mainchain.v1.SubscribeEventsResponse.Event.ConnectBlock.
 * Use `create(SubscribeEventsResponse_Event_ConnectBlockSchema)` to create a new message.
 */
export declare const SubscribeEventsResponse_Event_ConnectBlockSchema: GenMessage<SubscribeEventsResponse_Event_ConnectBlock>;

/**
 * @generated from message cusf.mainchain.v1.SubscribeEventsResponse.Event.DisconnectBlock
 */
export declare type SubscribeEventsResponse_Event_DisconnectBlock = Message<"cusf.mainchain.v1.SubscribeEventsResponse.Event.DisconnectBlock"> & {
  /**
   * @generated from field: cusf.common.v1.ReverseHex block_hash = 1;
   */
  blockHash?: ReverseHex;
};

/**
 * Describes the message cusf.mainchain.v1.SubscribeEventsResponse.Event.DisconnectBlock.
 * Use `create(SubscribeEventsResponse_Event_DisconnectBlockSchema)` to create a new message.
 */
export declare const SubscribeEventsResponse_Event_DisconnectBlockSchema: GenMessage<SubscribeEventsResponse_Event_DisconnectBlock>;

/**
 * Empty for now, could add filters later
 *
 * @generated from message cusf.mainchain.v1.SubscribeHeaderSyncProgressRequest
 */
export declare type SubscribeHeaderSyncProgressRequest = Message<"cusf.mainchain.v1.SubscribeHeaderSyncProgressRequest"> & {
};

/**
 * Describes the message cusf.mainchain.v1.SubscribeHeaderSyncProgressRequest.
 * Use `create(SubscribeHeaderSyncProgressRequestSchema)` to create a new message.
 */
export declare const SubscribeHeaderSyncProgressRequestSchema: GenMessage<SubscribeHeaderSyncProgressRequest>;

/**
 * @generated from message cusf.mainchain.v1.SubscribeHeaderSyncProgressResponse
 */
export declare type SubscribeHeaderSyncProgressResponse = Message<"cusf.mainchain.v1.SubscribeHeaderSyncProgressResponse"> & {
  /**
   * Current sync height may be unknown at the start of a sync
   *
   * @generated from field: optional google.protobuf.UInt32Value current_height = 1;
   */
  currentHeight?: number;
};

/**
 * Describes the message cusf.mainchain.v1.SubscribeHeaderSyncProgressResponse.
 * Use `create(SubscribeHeaderSyncProgressResponseSchema)` to create a new message.
 */
export declare const SubscribeHeaderSyncProgressResponseSchema: GenMessage<SubscribeHeaderSyncProgressResponse>;

/**
 * @generated from enum cusf.mainchain.v1.Network
 */
export enum Network {
  /**
   * @generated from enum value: NETWORK_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: NETWORK_UNKNOWN = 1;
   */
  UNKNOWN = 1,

  /**
   * @generated from enum value: NETWORK_MAINNET = 2;
   */
  MAINNET = 2,

  /**
   * @generated from enum value: NETWORK_REGTEST = 3;
   */
  REGTEST = 3,

  /**
   * @generated from enum value: NETWORK_SIGNET = 4;
   */
  SIGNET = 4,

  /**
   * @generated from enum value: NETWORK_TESTNET = 5;
   */
  TESTNET = 5,
}

/**
 * Describes the enum cusf.mainchain.v1.Network.
 */
export declare const NetworkSchema: GenEnum<Network>;

/**
 * @generated from service cusf.mainchain.v1.ValidatorService
 */
export declare const ValidatorService: GenService<{
  /**
   * Fetches information about a specific mainchain block header,
   * and optionally, it's ancestors
   *
   * @generated from rpc cusf.mainchain.v1.ValidatorService.GetBlockHeaderInfo
   */
  getBlockHeaderInfo: {
    methodKind: "unary";
    input: typeof GetBlockHeaderInfoRequestSchema;
    output: typeof GetBlockHeaderInfoResponseSchema;
  },
  /**
   * Fetches information about a specific mainchain block (and optionally,
   * it's ancestors), regarding how it pertains to events happening on a
   * specific sidechain.
   *
   * @generated from rpc cusf.mainchain.v1.ValidatorService.GetBlockInfo
   */
  getBlockInfo: {
    methodKind: "unary";
    input: typeof GetBlockInfoRequestSchema;
    output: typeof GetBlockInfoResponseSchema;
  },
  /**
   * Fetches BMM h* commitment for a specific mainchain block,
   * and optionally, it's ancestors
   *
   * @generated from rpc cusf.mainchain.v1.ValidatorService.GetBmmHStarCommitment
   */
  getBmmHStarCommitment: {
    methodKind: "unary";
    input: typeof GetBmmHStarCommitmentRequestSchema;
    output: typeof GetBmmHStarCommitmentResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.ValidatorService.GetChainInfo
   */
  getChainInfo: {
    methodKind: "unary";
    input: typeof GetChainInfoRequestSchema;
    output: typeof GetChainInfoResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.ValidatorService.GetChainTip
   */
  getChainTip: {
    methodKind: "unary";
    input: typeof GetChainTipRequestSchema;
    output: typeof GetChainTipResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.ValidatorService.GetCoinbasePSBT
   */
  getCoinbasePSBT: {
    methodKind: "unary";
    input: typeof GetCoinbasePSBTRequestSchema;
    output: typeof GetCoinbasePSBTResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.ValidatorService.GetCtip
   */
  getCtip: {
    methodKind: "unary";
    input: typeof GetCtipRequestSchema;
    output: typeof GetCtipResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.ValidatorService.GetSidechainProposals
   */
  getSidechainProposals: {
    methodKind: "unary";
    input: typeof GetSidechainProposalsRequestSchema;
    output: typeof GetSidechainProposalsResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.ValidatorService.GetSidechains
   */
  getSidechains: {
    methodKind: "unary";
    input: typeof GetSidechainsRequestSchema;
    output: typeof GetSidechainsResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.ValidatorService.GetTwoWayPegData
   */
  getTwoWayPegData: {
    methodKind: "unary";
    input: typeof GetTwoWayPegDataRequestSchema;
    output: typeof GetTwoWayPegDataResponseSchema;
  },
  /**
   * @generated from rpc cusf.mainchain.v1.ValidatorService.SubscribeEvents
   */
  subscribeEvents: {
    methodKind: "server_streaming";
    input: typeof SubscribeEventsRequestSchema;
    output: typeof SubscribeEventsResponseSchema;
  },
  /**
   * Stream header sync progress updates
   *
   * @generated from rpc cusf.mainchain.v1.ValidatorService.SubscribeHeaderSyncProgress
   */
  subscribeHeaderSyncProgress: {
    methodKind: "server_streaming";
    input: typeof SubscribeHeaderSyncProgressRequestSchema;
    output: typeof SubscribeHeaderSyncProgressResponseSchema;
  },
}>;

