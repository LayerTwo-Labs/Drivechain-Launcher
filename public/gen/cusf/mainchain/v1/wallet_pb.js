// CUSF mainchain wallet service 

// @generated by protoc-gen-es v2.2.5 with parameter "js_import_style=legacy_commonjs"
// @generated from file cusf/mainchain/v1/wallet.proto (package cusf.mainchain.v1, syntax proto3)
/* eslint-disable */

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

const { fileDesc, messageDesc, serviceDesc } = require("@bufbuild/protobuf/codegenv1");
const { file_google_protobuf_timestamp, file_google_protobuf_wrappers } = require("@bufbuild/protobuf/wkt");
const { file_cusf_common_v1_common } = require("../../common/v1/common_pb");
const { file_cusf_mainchain_v1_common } = require("./common_pb");

/**
 * Describes the file cusf/mainchain/v1/wallet.proto.
 */
const file_cusf_mainchain_v1_wallet = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_timestamp, file_google_protobuf_wrappers, file_cusf_common_v1_common, file_cusf_mainchain_v1_common]);

/**
 * Describes the message cusf.mainchain.v1.WalletTransaction.
 * Use `create(WalletTransactionSchema)` to create a new message.
 */
const WalletTransactionSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 0);

/**
 * Describes the message cusf.mainchain.v1.WalletTransaction.Confirmation.
 * Use `create(WalletTransaction_ConfirmationSchema)` to create a new message.
 */
const WalletTransaction_ConfirmationSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 0, 0);

/**
 * Describes the message cusf.mainchain.v1.BroadcastWithdrawalBundleRequest.
 * Use `create(BroadcastWithdrawalBundleRequestSchema)` to create a new message.
 */
const BroadcastWithdrawalBundleRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 1);

/**
 * Describes the message cusf.mainchain.v1.BroadcastWithdrawalBundleResponse.
 * Use `create(BroadcastWithdrawalBundleResponseSchema)` to create a new message.
 */
const BroadcastWithdrawalBundleResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 2);

/**
 * Describes the message cusf.mainchain.v1.CreateBmmCriticalDataTransactionRequest.
 * Use `create(CreateBmmCriticalDataTransactionRequestSchema)` to create a new message.
 */
const CreateBmmCriticalDataTransactionRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 3);

/**
 * Describes the message cusf.mainchain.v1.CreateBmmCriticalDataTransactionResponse.
 * Use `create(CreateBmmCriticalDataTransactionResponseSchema)` to create a new message.
 */
const CreateBmmCriticalDataTransactionResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 4);

/**
 * Describes the message cusf.mainchain.v1.CreateDepositTransactionRequest.
 * Use `create(CreateDepositTransactionRequestSchema)` to create a new message.
 */
const CreateDepositTransactionRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 5);

/**
 * Describes the message cusf.mainchain.v1.CreateDepositTransactionResponse.
 * Use `create(CreateDepositTransactionResponseSchema)` to create a new message.
 */
const CreateDepositTransactionResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 6);

/**
 * Describes the message cusf.mainchain.v1.CreateNewAddressRequest.
 * Use `create(CreateNewAddressRequestSchema)` to create a new message.
 */
const CreateNewAddressRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 7);

/**
 * Describes the message cusf.mainchain.v1.CreateNewAddressResponse.
 * Use `create(CreateNewAddressResponseSchema)` to create a new message.
 */
const CreateNewAddressResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 8);

/**
 * Describes the message cusf.mainchain.v1.CreateSidechainProposalRequest.
 * Use `create(CreateSidechainProposalRequestSchema)` to create a new message.
 */
const CreateSidechainProposalRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 9);

/**
 * Describes the message cusf.mainchain.v1.CreateSidechainProposalResponse.
 * Use `create(CreateSidechainProposalResponseSchema)` to create a new message.
 */
const CreateSidechainProposalResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 10);

/**
 * Describes the message cusf.mainchain.v1.CreateSidechainProposalResponse.Confirmed.
 * Use `create(CreateSidechainProposalResponse_ConfirmedSchema)` to create a new message.
 */
const CreateSidechainProposalResponse_ConfirmedSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 10, 0);

/**
 * Describes the message cusf.mainchain.v1.CreateSidechainProposalResponse.NotConfirmed.
 * Use `create(CreateSidechainProposalResponse_NotConfirmedSchema)` to create a new message.
 */
const CreateSidechainProposalResponse_NotConfirmedSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 10, 1);

/**
 * Describes the message cusf.mainchain.v1.CreateWalletRequest.
 * Use `create(CreateWalletRequestSchema)` to create a new message.
 */
const CreateWalletRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 11);

/**
 * Describes the message cusf.mainchain.v1.CreateWalletResponse.
 * Use `create(CreateWalletResponseSchema)` to create a new message.
 */
const CreateWalletResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 12);

/**
 * Describes the message cusf.mainchain.v1.GetBalanceRequest.
 * Use `create(GetBalanceRequestSchema)` to create a new message.
 */
const GetBalanceRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 13);

/**
 * Describes the message cusf.mainchain.v1.GetBalanceResponse.
 * Use `create(GetBalanceResponseSchema)` to create a new message.
 */
const GetBalanceResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 14);

/**
 * Describes the message cusf.mainchain.v1.ListSidechainDepositTransactionsRequest.
 * Use `create(ListSidechainDepositTransactionsRequestSchema)` to create a new message.
 */
const ListSidechainDepositTransactionsRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 15);

/**
 * Describes the message cusf.mainchain.v1.ListSidechainDepositTransactionsResponse.
 * Use `create(ListSidechainDepositTransactionsResponseSchema)` to create a new message.
 */
const ListSidechainDepositTransactionsResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 16);

/**
 * Describes the message cusf.mainchain.v1.ListSidechainDepositTransactionsResponse.SidechainDepositTransaction.
 * Use `create(ListSidechainDepositTransactionsResponse_SidechainDepositTransactionSchema)` to create a new message.
 */
const ListSidechainDepositTransactionsResponse_SidechainDepositTransactionSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 16, 0);

/**
 * Describes the message cusf.mainchain.v1.ListTransactionsRequest.
 * Use `create(ListTransactionsRequestSchema)` to create a new message.
 */
const ListTransactionsRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 17);

/**
 * Describes the message cusf.mainchain.v1.ListTransactionsResponse.
 * Use `create(ListTransactionsResponseSchema)` to create a new message.
 */
const ListTransactionsResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 18);

/**
 * Describes the message cusf.mainchain.v1.SendTransactionRequest.
 * Use `create(SendTransactionRequestSchema)` to create a new message.
 */
const SendTransactionRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 19);

/**
 * Describes the message cusf.mainchain.v1.SendTransactionRequest.FeeRate.
 * Use `create(SendTransactionRequest_FeeRateSchema)` to create a new message.
 */
const SendTransactionRequest_FeeRateSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 19, 0);

/**
 * Describes the message cusf.mainchain.v1.SendTransactionRequest.RequiredUtxo.
 * Use `create(SendTransactionRequest_RequiredUtxoSchema)` to create a new message.
 */
const SendTransactionRequest_RequiredUtxoSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 19, 1);

/**
 * Describes the message cusf.mainchain.v1.SendTransactionResponse.
 * Use `create(SendTransactionResponseSchema)` to create a new message.
 */
const SendTransactionResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 20);

/**
 * Describes the message cusf.mainchain.v1.UnlockWalletRequest.
 * Use `create(UnlockWalletRequestSchema)` to create a new message.
 */
const UnlockWalletRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 21);

/**
 * Describes the message cusf.mainchain.v1.UnlockWalletResponse.
 * Use `create(UnlockWalletResponseSchema)` to create a new message.
 */
const UnlockWalletResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 22);

/**
 * Describes the message cusf.mainchain.v1.GenerateBlocksRequest.
 * Use `create(GenerateBlocksRequestSchema)` to create a new message.
 */
const GenerateBlocksRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 23);

/**
 * Describes the message cusf.mainchain.v1.GenerateBlocksResponse.
 * Use `create(GenerateBlocksResponseSchema)` to create a new message.
 */
const GenerateBlocksResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 24);

/**
 * Describes the message cusf.mainchain.v1.GetInfoRequest.
 * Use `create(GetInfoRequestSchema)` to create a new message.
 */
const GetInfoRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 25);

/**
 * Describes the message cusf.mainchain.v1.GetInfoResponse.
 * Use `create(GetInfoResponseSchema)` to create a new message.
 */
const GetInfoResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 26);

/**
 * Describes the message cusf.mainchain.v1.ListUnspentOutputsRequest.
 * Use `create(ListUnspentOutputsRequestSchema)` to create a new message.
 */
const ListUnspentOutputsRequestSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 27);

/**
 * Describes the message cusf.mainchain.v1.ListUnspentOutputsResponse.
 * Use `create(ListUnspentOutputsResponseSchema)` to create a new message.
 */
const ListUnspentOutputsResponseSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 28);

/**
 * Describes the message cusf.mainchain.v1.ListUnspentOutputsResponse.Output.
 * Use `create(ListUnspentOutputsResponse_OutputSchema)` to create a new message.
 */
const ListUnspentOutputsResponse_OutputSchema = /*@__PURE__*/
  messageDesc(file_cusf_mainchain_v1_wallet, 28, 0);

/**
 * @generated from service cusf.mainchain.v1.WalletService
 */
const WalletService = /*@__PURE__*/
  serviceDesc(file_cusf_mainchain_v1_wallet, 0);


exports.file_cusf_mainchain_v1_wallet = file_cusf_mainchain_v1_wallet;
exports.WalletTransactionSchema = WalletTransactionSchema;
exports.WalletTransaction_ConfirmationSchema = WalletTransaction_ConfirmationSchema;
exports.BroadcastWithdrawalBundleRequestSchema = BroadcastWithdrawalBundleRequestSchema;
exports.BroadcastWithdrawalBundleResponseSchema = BroadcastWithdrawalBundleResponseSchema;
exports.CreateBmmCriticalDataTransactionRequestSchema = CreateBmmCriticalDataTransactionRequestSchema;
exports.CreateBmmCriticalDataTransactionResponseSchema = CreateBmmCriticalDataTransactionResponseSchema;
exports.CreateDepositTransactionRequestSchema = CreateDepositTransactionRequestSchema;
exports.CreateDepositTransactionResponseSchema = CreateDepositTransactionResponseSchema;
exports.CreateNewAddressRequestSchema = CreateNewAddressRequestSchema;
exports.CreateNewAddressResponseSchema = CreateNewAddressResponseSchema;
exports.CreateSidechainProposalRequestSchema = CreateSidechainProposalRequestSchema;
exports.CreateSidechainProposalResponseSchema = CreateSidechainProposalResponseSchema;
exports.CreateSidechainProposalResponse_ConfirmedSchema = CreateSidechainProposalResponse_ConfirmedSchema;
exports.CreateSidechainProposalResponse_NotConfirmedSchema = CreateSidechainProposalResponse_NotConfirmedSchema;
exports.CreateWalletRequestSchema = CreateWalletRequestSchema;
exports.CreateWalletResponseSchema = CreateWalletResponseSchema;
exports.GetBalanceRequestSchema = GetBalanceRequestSchema;
exports.GetBalanceResponseSchema = GetBalanceResponseSchema;
exports.ListSidechainDepositTransactionsRequestSchema = ListSidechainDepositTransactionsRequestSchema;
exports.ListSidechainDepositTransactionsResponseSchema = ListSidechainDepositTransactionsResponseSchema;
exports.ListSidechainDepositTransactionsResponse_SidechainDepositTransactionSchema = ListSidechainDepositTransactionsResponse_SidechainDepositTransactionSchema;
exports.ListTransactionsRequestSchema = ListTransactionsRequestSchema;
exports.ListTransactionsResponseSchema = ListTransactionsResponseSchema;
exports.SendTransactionRequestSchema = SendTransactionRequestSchema;
exports.SendTransactionRequest_FeeRateSchema = SendTransactionRequest_FeeRateSchema;
exports.SendTransactionRequest_RequiredUtxoSchema = SendTransactionRequest_RequiredUtxoSchema;
exports.SendTransactionResponseSchema = SendTransactionResponseSchema;
exports.UnlockWalletRequestSchema = UnlockWalletRequestSchema;
exports.UnlockWalletResponseSchema = UnlockWalletResponseSchema;
exports.GenerateBlocksRequestSchema = GenerateBlocksRequestSchema;
exports.GenerateBlocksResponseSchema = GenerateBlocksResponseSchema;
exports.GetInfoRequestSchema = GetInfoRequestSchema;
exports.GetInfoResponseSchema = GetInfoResponseSchema;
exports.ListUnspentOutputsRequestSchema = ListUnspentOutputsRequestSchema;
exports.ListUnspentOutputsResponseSchema = ListUnspentOutputsResponseSchema;
exports.ListUnspentOutputsResponse_OutputSchema = ListUnspentOutputsResponse_OutputSchema;
exports.WalletService = WalletService;
