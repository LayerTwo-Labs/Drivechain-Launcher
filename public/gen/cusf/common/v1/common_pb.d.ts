// Common message types 

// @generated by protoc-gen-es v2.2.5 with parameter "js_import_style=legacy_commonjs"
// @generated from file cusf/common/v1/common.proto (package cusf.common.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cusf/common/v1/common.proto.
 */
export declare const file_cusf_common_v1_common: GenFile;

/**
 * / Consensus-encoded hex.
 * / Variable length data uses a length prefix.
 *
 * @generated from message cusf.common.v1.ConsensusHex
 */
export declare type ConsensusHex = Message<"cusf.common.v1.ConsensusHex"> & {
  /**
   * @generated from field: google.protobuf.StringValue hex = 1;
   */
  hex?: string;
};

/**
 * Describes the message cusf.common.v1.ConsensusHex.
 * Use `create(ConsensusHexSchema)` to create a new message.
 */
export declare const ConsensusHexSchema: GenMessage<ConsensusHex>;

/**
 * / Hex encoding of byte arrays/vectors.
 * / Length prefixes are not used.
 *
 * @generated from message cusf.common.v1.Hex
 */
export declare type Hex = Message<"cusf.common.v1.Hex"> & {
  /**
   * @generated from field: google.protobuf.StringValue hex = 1;
   */
  hex?: string;
};

/**
 * Describes the message cusf.common.v1.Hex.
 * Use `create(HexSchema)` to create a new message.
 */
export declare const HexSchema: GenMessage<Hex>;

/**
 * / Reverse consensus-encoded hex
 *
 * @generated from message cusf.common.v1.ReverseHex
 */
export declare type ReverseHex = Message<"cusf.common.v1.ReverseHex"> & {
  /**
   * @generated from field: google.protobuf.StringValue hex = 1;
   */
  hex?: string;
};

/**
 * Describes the message cusf.common.v1.ReverseHex.
 * Use `create(ReverseHexSchema)` to create a new message.
 */
export declare const ReverseHexSchema: GenMessage<ReverseHex>;

